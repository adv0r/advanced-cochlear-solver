% QUADL  数値積分、適応 Lobatto 求積法
% 
%   Q = QUADL(FUN,A,B) は、高次の再帰適応求積法を使って、1.e-6 の誤差内で、
%   A から B まで、スカラ値の関数 FUN の積分を近似しようとします。FUN は
%   関数ハンドルです。関数 Y = FUN(X) は、ベクトルの引数 X を受け入れ、
%   X の各要素で実行した被積分関数のベクトルの結果 Y を返します。
%
%   Q = QUADL(FUN,A,B,TOL) は、デフォルトの 1.e-6 の代わりに TOL を絶対
%   誤差許容範囲として使用します。TOL の値を大きくすると、関数の計算回数
%   が減り、高速になりますが、精度は低下します。
%
%   Q = QUADL(FUN,A,B,TOL,TRACE) は、非零の TRACE もつ場合、繰り返しの間、
%   [fcnt a b-a Q] の値を表示します。TOL のデフォルト値を得るには、
%   プレースホルダーとして [] を使用してください。
%
%   [Q,FCNT] = QUADL(...) は、関数計算の回数を出力します。
%
%   ベクトル引数と共に計算できるように、FUN の定義の中で、配列演算子 .*, 
%   ./, .^ を使います。
%
%   注意 :
%   関数 QUAD は、低い精度とスムーズでない被積分関数により、より効率的な
%   計算になる可能性があります。
%   関数 QUADV は、配列値 FUN に対して QUAD (QUADL でなく) をベクトル化
%   します。
%
%   例 :
%      Q = quadl(@myfun,0,2);
%   ここで myfun.m は、つぎの M-ファイル関数です。
%      %-------------------%
%      function y = myfun(x)
%      y = 1./(x.^3-2*x-5);
%      %-------------------%
%
%   あるいは、定数のパラメータを使用します。
%      Q = quadl(@(x)myfun2(x,5),0,2);
%   ここで、myfun2 は、つぎの M-ファイル関数です。
%      %----------------------%
%      function y = myfun2(x,c)
%      y = 1./(x.^3-2*x-c);
%      %----------------------%
%
%   入力 A, B と FUN の出力のクラスサポート: 
%      float: double, single
%
%   参考 QUAD, QUADV, DBLQUAD, TRIPLEQUAD, TRAPZ, FUNCTION_HANDLE.


%   Copyright 1984-2006 The MathWorks, Inc. 
